package ch.heigvd.res.io;

import java.util.Collection;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Set;

/**
 * Represents the data generated by the benchmark
 * @author Amel Dussier
 */
public class BenchmarkData implements IData {
    
    // table with the datas
    private final Map<String, Object> _datas;
    
    /**
     * Constructor
     * @param operation The operation (READ / WRITE)
     * @param strategy The IO strategy used
     * @param bytesCount The number of bytes processed
     * @param blockSize The block size
     * @param duration The duration of the process in milliseconds
     */
    public BenchmarkData(String operation, String strategy, long bytesCount, int blockSize, long duration) {
        
        // add data
        _datas = new LinkedHashMap();
        _datas.put("Operation", operation);
        _datas.put("Strategy used", strategy);
        _datas.put("Bytes count", bytesCount);
        _datas.put("Block size", blockSize);
        _datas.put("Duration in [ms]", duration);
    }

    @Override
    public Set<String> getAttributes() {
        return _datas.keySet();
    }

    @Override
    public Collection<Object> getValues() {
        return _datas.values();
    }
}
